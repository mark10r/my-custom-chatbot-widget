/* src/index.css - NOW CONTAINS ALL WIDGET STYLES */

/* Base reset for the widget container and its children */
/* This aims to isolate the widget's styling from the host page's CSS */
.chat-widget-container {
    /* 'all: unset;' resets all properties to their initial or inherited values. */
    /* This is a powerful way to clear default browser/theme styles. */
    all: unset;
    display: block; /* Ensure it behaves as a block element */
    box-sizing: border-box; /* Crucial for consistent sizing */
    position: fixed; /* Keep fixed position for floating widget */
    z-index: 10000; /* Increased z-index to ensure it's on top */
    font-family: Arial, sans-serif; /* Explicit font-family */
    font-size: 16px; /* Base font size in pixels */
    line-height: 1.2; /* Consistent line height */
    color: #333; /* Default text color */
}

/* Ensure all elements within the widget inherit box-sizing and apply basic resets */
.chat-widget-container *,
.chat-widget-container *::before,
.chat-widget-container *::after {
    box-sizing: inherit; /* Inherit box-sizing from parent */
    margin: 0;
    padding: 0;
    line-height: inherit; /* Inherit line height */
    /* Only inherit font-size and color if not explicitly set on specific elements */
    /* This prevents them from being overridden by external CSS unless we intend it */
    font-size: inherit;
    color: inherit;
    vertical-align: baseline; /* Consistent alignment */

    /* Remove default element styles that might interfere */
    border: none;
    background: none;
    outline: none;
    text-decoration: none;
    appearance: none; /* For form elements */
    -webkit-tap-highlight-color: transparent; /* For mobile tap effects */
}

/* Position the button */
.chat-widget-container.bottom-right {
    bottom: 20px;
    right: 20px;
}
.chat-widget-container.bottom-left {
    bottom: 20px;
    left: 20px;
}
.chat-widget-container.top-right {
    top: 20px;
    right: 20px;
}
.chat-widget-container.top-left {
    top: 20px;
    left: 20px;
}

.mini-welcome-bubble {
    position: absolute;
    padding: 8px 12px;
    border-radius: 10px;
    font-size: 14px; /* Explicit font size in pixels */
    font-weight: bold;
    min-width: 200px;
    max-width: 300px;
    text-align: center;
    cursor: pointer;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    z-index: 999;

    bottom: 60px;
    right: 30px;

    opacity: 0;
    transform: translateY(10px);
    animation: fadeInPopUp 0.5s ease-out forwards;
    animation-delay: 0.5s;

    background-color: #f0f0f0;
    color: #333;
}

/* Adjust mini bubble position based on main button position */
.chat-widget-container.bottom-right .mini-welcome-bubble {
    bottom: 60px;
    right: 60px;
}
.chat-widget-container.bottom-left .mini-welcome-bubble {
    bottom: 60px;
    left: 60px;
}
.chat-widget-container.top-right .mini-welcome-bubble {
    top: 60px;
    right: 60px;
}
.chat-widget-container.top-left .mini-welcome-bubble {
    top: 60px;
    left: 60px;
}

/* Animation for the mini bubble */
@keyframes fadeInPopUp {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.chat-bubble-button {
    border: none;
    border-radius: 50%;
    width: 60px; /* Explicit size */
    height: 60px; /* Explicit size */
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 4px 8px rgba(12, 12, 12, 0.2);
    transition: transform 0.2s ease-in-out;
    color: white; /* For icon if it's text */
    background-color: #4CAF50; /* Default green, will be overridden by primaryColor */
}

.chat-bubble-button:hover {
    transform: scale(1.05);
}

.chat-icon {
    width: 30px; /* Explicit size */
    height: 30px; /* Explicit size */
    filter: brightness(0) invert(1);
    display: block; /* Ensures it behaves as a block for sizing */
}

.chat-window {
    position: fixed;
    width: 350px; /* Explicit width */
    height: 500px; /* Explicit height */
    background-color: white;
    border-radius: 10px;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
    display: flex;
    flex-direction: column;
    overflow: hidden;
    border: 2px solid; /* For primaryColor border */

    transform: scale(0.9);
    opacity: 0;
    pointer-events: none;
    visibility: hidden;
    transition: transform 0.3s ease-out, opacity 0.3s ease-out, visibility 0.3s;

    bottom: 90px;
    right: 20px;
}

/* Position and transform-origin for different button positions */
.chat-widget-container.bottom-right .chat-window {
    right: 20px;
    bottom: 90px;
    transform-origin: bottom right;
}

.chat-widget-container.bottom-left .chat-window {
    left: 20px;
    bottom: 90px;
    transform-origin: bottom left;
}

.chat-widget-container.top-right .chat-window {
    right: 20px;
    top: 90px;
    transform-origin: top right;
}

.chat-widget-container.top-left .chat-window {
    left: 20px;
    top: 90px;
    transform-origin: top left;
}

/* State when chat window is OPEN: END STATE for the animation */
.chat-window.is-open {
    transform: scale(1);
    opacity: 1;
    pointer-events: auto;
    visibility: visible;
}

.chat-header {
    padding: 20px;
    margin-top: -15px;
    margin-bottom: -15px;
    color: white;
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-weight: bold;
    flex-shrink: 0;
    background-color: #4CAF50; /* Default green, will be overridden by primaryColor */
}

.header-avatar {
    width: 35px; /* Fixed width */
    height: 35px; /* Fixed height */
    border-radius: 50%;
    margin-right: 10px;
    object-fit: cover;
    flex-shrink: 0;
}

.chat-header h3 {
    margin: 0;
    font-size: 18px; /* Explicit font size in pixels */
    flex-grow: 1;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.close-button {
    background: none;
    border: none;
    color: white;
    font-size: 24px; /* Explicit font size in pixels */
    cursor: pointer;
    line-height: 1;
}

.chat-messages {
    flex-grow: 1;
    padding: 15px;
    overflow-y: auto;
    background-color: #f9f9f9;
}

.message {
    display: flex;
    margin-bottom: 10px;
}

.message.user {
    justify-content: flex-end;
}

.message.bot {
    justify-content: flex-start;
}

.message-bubble {
    padding: 10px 15px;
    border-radius: 20px;
    max-width: 80%;
    word-wrap: break-word;
    line-height: 1.4;
    font-size: 15px; /* Explicit font size in pixels */
    background-color: #e0e0e0;
    color: #333;
}

.message.user .message-bubble {
    border-bottom-right-radius: 5px;
    background-color: #DCF8C6;
    color: #000;
}

.message.bot .message-bubble {
    border-bottom-left-radius: 5px;
}

.chat-input-area {
    display: flex;
    padding: 15px;
    border-top: 1px solid #eee;
    background-color: #fff;
    flex-shrink: 0;
}

.chat-input-area input {
    flex-grow: 1;
    border: 1px solid #ddd;
    border-radius: 20px;
    padding: 10px 15px;
    margin-right: 10px;
    font-size: 14px; /* Explicit font size in pixels */
    color: #333;
}

.chat-input-area button {
    border: none;
    border-radius: 20px;
    padding: 10px 15px;
    color: white;
    cursor: pointer;
    font-weight: bold;
    background-color: #4CAF50; /* Default green, will be overridden by primaryColor */
}

/* Typing indicator */
.typing-indicator .dot {
    width: 8px;
    height: 8px;
    background-color: #bbb;
    border-radius: 50%;
    display: inline-block;
    margin: 0 2px;
    animation: bounce 0.6s infinite alternate;
}

.chat-powered-by {
    padding: 5px 15px;
    text-align: center;
    font-size: 11px; /* Explicit font size in pixels */
    font-weight: normal;
    color: #aaaaaa;
    background-color: #f0f0f0;
    border-top: 1px solid #eee;
    flex-shrink: 0;
    width: 100%;
    box-sizing: border-box;
}

.chat-powered-by a {
    color: #aaaaaa;
    text-decoration: none;
}

.chat-powered-by a:hover {
    text-decoration: underline;
}

.typing-indicator .dot:nth-child(2) {
    animation-delay: 0.2s;
}

.typing-indicator .dot:nth-child(3) {
    animation-delay: 0.4s;
}

@keyframes bounce {
    from { transform: translateY(0); }
    to { transform: translateY(-5px); }
}